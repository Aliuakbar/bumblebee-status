#!/usr/bin/env python

import sys
import json
import select
import logging
import threading

import core.config
import core.output
import core.module
import core.input

def handle_input(output):
    poll = select.poll()
    poll.register(sys.stdin.fileno(), select.POLLIN)

    while True:
        events = poll.poll()

        modules = {}
        for fileno, event in events:
            line = '['
            while line.startswith('['):
                line = sys.stdin.readline().strip(',').strip()
            logging.info('input event: {}'.format(line))
            try:
                event = json.loads(line)
                core.input.trigger(event)
                if 'name' in event:
                    modules[event['name']] = True
            except ValueError:
                pass
        output.update(modules.keys())
        output.draw('statusline')

    poll.unregister(sys.stdin.fileno())

def main():
    logging.basicConfig(
        level=logging.DEBUG,
        format="[%(asctime)s] %(module)-16s %(levelname)-8s %(message)s",
        stream=sys.stderr
    )

    config = core.config.Config(sys.argv[1:])
    theme = core.theme.Theme(config.theme(), config.iconset())
    output = core.output.i3(theme)
    modules = []

    input_thread = threading.Thread(target=handle_input, args=(output,))
    input_thread.daemon = True
    input_thread.start()

    for module in config.modules():
        modules.append(core.module.load(module, config))
    output.modules(modules)
    output.draw('start')
    while True:
        output.update()
        output.draw('statusline')
        output.wait(config.interval())
    output.draw('stop')

if __name__ == "__main__":
    main()

# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
